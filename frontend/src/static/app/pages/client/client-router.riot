<client-router>
  <!-- クライアント画面がマウントされるところ -->
  <route path={ state.routes.executeDocuments.path }>
    <ex-documents></ex-documents>
  </route>
  <route path={ state.routes.executeSchemaSyncCheck.path }>
    <ex-schema-sync-check></ex-schema-sync-check>
  </route>
  <route path={ state.routes.executeReplaceSchema.path }>
    <ex-replace-schema></ex-replace-schema>
  </route>
  <route path={ state.routes.executeAlterCheck.path }>
    <ex-alter-check></ex-alter-check>
  </route>
  <route path={ state.routes.executeSchemaPolicyCheck.path }>
    <ex-schema-policy-check></ex-schema-policy-check>
  </route>
  <route path={ state.routes.settingsDatabaseInfo.path }>
    <st-database-info></st-database-info>
  </route>
  <route path={ state.routes.filesLogs.path }>
    <logs project-name={ props.projectName }></logs>
  </route>

  <script>
    import { Route } from '@riotjs/route'
    import ExDocuments from './documents/ex-documents.riot'
    import ExSchemaSyncCheck from './schema-sync-check/ex-schema-sync-check.riot'
    import ExReplaceSchema from './replace-schema/ex-replace-schema.riot'
    import ExAlterCheck from './alter-check/ex-alter-check.riot'
    import ExSchemaPolicyCheck from './schema-policy-check/ex-schema-policy-check.riot'
    import StDatabaseInfo from './database-infro/st-database-info.riot'
    import Logs from './logs/logs.riot'
    import { clientRoutes } from './client-router';

    export default {
      components: {
        ExDocuments,
        ExSchemaSyncCheck,
        ExReplaceSchema,
        ExAlterCheck,
        ExSchemaPolicyCheck,
        StDatabaseInfo,
        Logs,
        Route
      },
      state: {
        routes: clientRoutes,
      },
    }
  </script>
</client-router>
