# /---------------------------------------------------------------------------
# schemaPolicyMap: (Default map:{})
#
# The definition of schema policy.
# You can check your schema as the policy.
# The table and column names are treated as case insensitive.
#
# Example:
# map:{
#     ; tableExceptList = list:{}
#     ; tableTargetList = list:{}
#     ; columnExceptMap = map:{}
#     ; isMainSchemaOnly = false
#
#     ; wholeMap = map:{
#         ; themeList = list:{ uniqueTableAlias ; sameColumnAliasIfSameColumnName }
#     }
#     ; tableMap = map:{
#         ; themeList = list:{ hasPK ; upperCaseBasis ; identityIfPureIDPK }
#         ; statementList = list:{
#             ; if tableName is $$ALL$$ then fkName is prefix:FK_$$table$$
#         }
#     }
#     ; columnMap = map:{
#         ; themeList = list:{ upperCaseBasis }
#         ; statementList = list:{
#             ; if columnName is suffix:_FLAG then bad
#             ; if columnName is suffix:_FLG then notNull
#             ; if columnName is suffix:_FLG then dbType is INTEGER
#             ; if columnName is suffix:_FLG then classification
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    ; tableExceptList = list:{ prefix:VENDOR_ ; prefix:WHITE_ ; prefix:REGION }
    ; tableTargetList = list:{}
    ; columnExceptMap = map:{}
    ; isMainSchemaOnly = true

    ; wholeMap = map:{
        ; themeList = list:{
            ; uniqueTableAlias
            ; sameColumnAliasIfSameColumnName
            ; sameColumnDbTypeIfSameColumnName
            ; sameColumnSizeIfSameColumnName
            ; sameColumnNameIfSameColumnAlias
        }
    }
    ; tableMap = map:{
        ; themeList = list:{ hasPK ; upperCaseBasis ; identityIfPureIDPK }
        ; statementList = list:{
            ; if tableName is $$ALL$$ then fkName is prefix:FK_$$table$$
        }
    }
    ; columnMap = map:{
        ; themeList = list:{ upperCaseBasis }
        ; statementList = list:{
            # standard policy
            ; if columnName is suffix:_FLAG then bad => should be _FLG
            ; if columnName is suffix:_FLG then notNull
            ; if columnName is suffix:_FLG then dbType is INT
            ; if columnName is suffix:_FLG then classification

            # monkey test (also for performance check)
            ; if columnName is suffix:_ID then sameColumnDbTypeIfSameColumnName
            ; if columnName is suffix:_CODE then sameColumnDbTypeIfSameColumnName
            ; if columnName is suffix:_NAME then sameColumnDbTypeIfSameColumnName
            ; if tableColumnName is contain:BER.MEM then tableColumnName is contain:ER.ME
            ; if firstDate is after:2014/05/01 and tableName is MEMBER then sameColumnAliasIfSameColumnName
            ; if tableName is PURCHASE and firstDate is after:2014/06/01 then sameColumnNameIfSameColumnAlias

            # test of long supplement comment
            ; if columnName is suffix:DATE then alias is suffix:日 => DATEカラム(時分秒のない日付)なら論理名は "なんとか日" にしよう
            ; if columnName is not suffix:DATE then alias is not suffix:日 => DATEカラム(時分秒のない日付)じゃないのに、"なんとか日" という論理名なの？
            ; if columnName is suffix:DATE then dbType is date => なんとかDATEなら、日付ということで date に
        }
    }
}
# ----------------/
